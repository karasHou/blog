import{_ as a,c as i,o as s,V as e}from"./chunks/framework.49KPGFpG.js";const m=JSON.parse('{"title":"浏览器图片加载策略","description":"","frontmatter":{},"headers":[],"relativePath":"01.日常文章/浏览器图片加载策略.md","filePath":"01.日常文章/浏览器图片加载策略.md"}'),n={name:"01.日常文章/浏览器图片加载策略.md"},t=e('<h1 id="浏览器图片加载策略" tabindex="-1">浏览器图片加载策略 <a class="header-anchor" href="#浏览器图片加载策略" aria-label="Permalink to &quot;浏览器图片加载策略&quot;">​</a></h1><blockquote><p>使用 chrome:105.0.5195.125，safari：15.5 (17613.2.7.1.8)</p></blockquote><h2 id="display-none-background-image" tabindex="-1">display: none + background-image <a class="header-anchor" href="#display-none-background-image" aria-label="Permalink to &quot;display: none + background-image&quot;">​</a></h2><p>将一个div设为 display: none, 并为其设置一个 background-image，不会下载图片。</p><h2 id="display-none-img-src-xx" tabindex="-1">display: none + <code>&lt;img src=&quot;xx&quot;&gt;</code> <a class="header-anchor" href="#display-none-img-src-xx" aria-label="Permalink to &quot;display: none + `&lt;img src=&quot;xx&quot;&gt;`&quot;">​</a></h2><p>将一个img设为 display: none, 并将其src指向一个图片地址，此时即使img是隐藏的，图片依然会被下载。</p><p>实际上，只要 img 元素设置了 src，无论这个 img 元素是否挂载到了页面内，图片都会被下载，可通过以下代码实验：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> img</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">img.src </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://dystroy.org/stripad/icon-v1.png&#39;</span></span></code></pre></div><p>在控制台执行以上代码，可在network面板内看到图片立即被下载了。</p><h2 id="父元素display-none-子元素-background-image" tabindex="-1">父元素display: none + 子元素 background-image <a class="header-anchor" href="#父元素display-none-子元素-background-image" aria-label="Permalink to &quot;父元素display: none + 子元素 background-image&quot;">​</a></h2><p>将一个 div 设为 <code>display: none</code>, 在这个 div 内添加一个 子div 并设置 background-image，此时 子div 的背景图片不会被下载。</p>',11),o=[t];function d(l,r,p,c,h,g){return s(),i("div",null,o)}const _=a(n,[["render",d]]);export{m as __pageData,_ as default};
